// Copyright (C) 2019-2022, Ava Labs, Inc. All rights reserved.
// See the file LICENSE for licensing terms.

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ava-labs/avalanchego/network/peer (interfaces: IPVerifier)

// Package peer is a generated GoMock package.
package peer

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIPVerifier is a mock of IPVerifier interface.
type MockIPVerifier struct {
	ctrl     *gomock.Controller
	recorder *MockIPVerifierMockRecorder
}

// MockIPVerifierMockRecorder is the mock recorder for MockIPVerifier.
type MockIPVerifierMockRecorder struct {
	mock *MockIPVerifier
}

// NewMockIPVerifier creates a new mock instance.
func NewMockIPVerifier(ctrl *gomock.Controller) *MockIPVerifier {
	mock := &MockIPVerifier{ctrl: ctrl}
	mock.recorder = &MockIPVerifierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPVerifier) EXPECT() *MockIPVerifierMockRecorder {
	return m.recorder
}

// Verify mocks base method.
func (m *MockIPVerifier) Verify(arg0 []byte, arg1 Signature) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Verify", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Verify indicates an expected call of Verify.
func (mr *MockIPVerifierMockRecorder) Verify(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Verify", reflect.TypeOf((*MockIPVerifier)(nil).Verify), arg0, arg1)
}
