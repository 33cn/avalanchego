// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ava-labs/avalanchego/wallet/chain/p (interfaces: SignerBackend)
//
// Generated by this command:
//
//	mockgen -package=p -destination=wallet/chain/p/mock_signer_backend.go github.com/ava-labs/avalanchego/wallet/chain/p SignerBackend
//

// Package p is a generated GoMock package.
package p

import (
	ctx "context"
	reflect "reflect"

	ids "github.com/ava-labs/avalanchego/ids"
	avax "github.com/ava-labs/avalanchego/vms/components/avax"
	txs "github.com/ava-labs/avalanchego/vms/platformvm/txs"
	gomock "go.uber.org/mock/gomock"
)

// MockSignerBackend is a mock of SignerBackend interface.
type MockSignerBackend struct {
	ctrl     *gomock.Controller
	recorder *MockSignerBackendMockRecorder
}

// MockSignerBackendMockRecorder is the mock recorder for MockSignerBackend.
type MockSignerBackendMockRecorder struct {
	mock *MockSignerBackend
}

// NewMockSignerBackend creates a new mock instance.
func NewMockSignerBackend(ctrl *gomock.Controller) *MockSignerBackend {
	mock := &MockSignerBackend{ctrl: ctrl}
	mock.recorder = &MockSignerBackendMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSignerBackend) EXPECT() *MockSignerBackendMockRecorder {
	return m.recorder
}

// GetTx mocks base method.
func (m *MockSignerBackend) GetTx(arg0 ctx.Context, arg1 ids.ID) (*txs.Tx, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTx", arg0, arg1)
	ret0, _ := ret[0].(*txs.Tx)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTx indicates an expected call of GetTx.
func (mr *MockSignerBackendMockRecorder) GetTx(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTx", reflect.TypeOf((*MockSignerBackend)(nil).GetTx), arg0, arg1)
}

// GetUTXO mocks base method.
func (m *MockSignerBackend) GetUTXO(arg0 ctx.Context, arg1, arg2 ids.ID) (*avax.UTXO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUTXO", arg0, arg1, arg2)
	ret0, _ := ret[0].(*avax.UTXO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUTXO indicates an expected call of GetUTXO.
func (mr *MockSignerBackendMockRecorder) GetUTXO(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUTXO", reflect.TypeOf((*MockSignerBackend)(nil).GetUTXO), arg0, arg1, arg2)
}
